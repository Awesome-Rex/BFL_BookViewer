@use "~scss/helpers/functions";
@use "~scss/helpers/mixins";

//https://youtu.be/3R4fpnIAozs?list=PL1sJZ9qwpVPbPqM5dTnP_L1R96eaoQhNK
//https://www.w3schools.com/howto/howto_css_media_query_breakpoints.asp

$breakpoints: (
    xs: 0,          //extra small       (phones)
    sm: 480px,      //small             (large phones, tablets)
    md: 720px,      //medium            (large tablets)
    lg: 960px,      //large             (laptops, desktops)
    xl: 1200px,     //extra large       (large laptops, large desktops) 
    gg: 1600px      //gigantic          (TVs)
);

@function get-min($breakpoint) {
    @return map-get($breakpoints, $breakpoint);
}

@function get-max($breakpoint, $decrement: true) {
    $index: functions.map-index($breakpoints, $breakpoint) + 1;
    @if ($index > functions.map-length($breakpoints)) {
        $index: functions.map-length($breakpoints);
    }

    $point: functions.map-nth($breakpoints, $index, true);
    @if ($decrement == true) {
        $point: $point - 1;
    }

    @return $point;
}

@function get-avg($breakpoint) {
    @return calc(#{get-min($breakpoint) + get-max($breakpoint, null)} / 2);
}

@function get($breakpoint, $value: 0, $decrement: false) {
    @return calc(#{get-min($breakpoint) + get-max($breakpoint, $decrement)} * #{$value});
}

@mixin default($selector: null) {
    ._layout-default #{unquote(#{$selector})} {
        @content;
    }
}

//TOOLS
@mixin xs($below: null) {
    @include breakpoint (xs, $below) {
        @content;
    }
}

@mixin sm($below: null) {
    @include breakpoint (sm, $below) {
        @content;
    }
}

@mixin md($below: null) {
    @include breakpoint (md, $below) {
        @content;
    }
}

@mixin lg($below: null) {
    @include breakpoint (lg, $below) {
        @content;
    }
}

@mixin xl($below: null) {
    @include breakpoint (xl, $below) {
        @content;
    }
}

@mixin breakpoint($breakpoint: xs, $below: null) {
    @if ($below == null) {
        @include mixins.custom-breakpoint(get-min($breakpoint)) {
            @content;
        }
    } @else {
        @include mixins.custom-breakpoint(get-max($breakpoint), $below) {
            @content;
        }
    }
}

@mixin between($min, $max) {
    @include mixins.custom-breakpoint(get-min($min)) {
        @include mixins.custom-breakpoint(get-max($max), true) {
            @content;
        }
    }
}

@mixin min {
    @media screen and (min-width: 0) {
        @content;
    }
}

@mixin max {
    @media screen and (max-width: 100vw) {
        @content;
    }
}

.responsive-test {
    &::before {
        content: "Breakpoint Test: ";
    }

    &::after {
        content: "N/A";

        @include xs {
            color: purple;
            content: "Extra Small (xs)";
        }
        @include sm {
            color: blue;
            content: "Small (sm)";
        }
        @include md {
            color: green;
            content: "Medium (md)";
        }
        @include lg {
            color: orange;
            content: "Large (lg)";
        }
        @include xl {
            color: red;
            content: "Extra Large (xl)";
        }
        @include mixins.custom-breakpoint(1400px) {
            color: brown;
            content: "GIGANTIC";
        }
    }
}

.responsive-test-below {
    &::before {
        content: "Breakpoint Test (Below): ";
    }

    &::after {
        content: "N/A";

        @include xl(true) {
            color: red;
            content: "Extra Large (xl)";
        }
        @include lg(true) {
            color: orange;
            content: "Large (lg)";
        }
        @include md(true) {
            color: green;
            content: "Medium (md)";
        }
        @include sm(true) {
            color: blue;
            content: "Small (sm)";
        }
        @include xs(true) {
            color: purple;
            content: "Extra Small (xs)";
        }
    }
}