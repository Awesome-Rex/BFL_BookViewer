@use "~src/scss/helpers";
@use "~src/scss/helpers/functions";
@use "~src/scss/helpers/mixins";
@use "~src/scss/resources";
@use "~src/scss/resources/effects";
@use "~src/scss/resources/breakpoints";
@use "~src/scss/stylesheets";
@use "~src/scss/stylesheets/form";

.book-player .progress {
    pointer-events: none;

    position: absolute;

    bottom: 0;

    width: 100%;
    height: 100%;

    z-index: 2;

    .slider { //background-color
        pointer-events: auto;

        --range-fill: var(--col-purple-dark);
        --range-remain: transparent;
        // --range-progress: ;
    
        cursor: pointer;
    
        appearance: none;
    
        position: absolute;
    
        bottom: calc(var(--progress-min) / -2);
        
        margin: 0;
        border-bottom-left-radius: 100vh;
        border-bottom-right-radius: 100vh;
        border-top-right-radius: 100vh;
        width: 100%;
        height: var(--progress-min);
        
        outline: none;
    
        // background: linear-gradient(to right, var(--range-fill) 0%, var(--range-fill) var(--progress), var(--range-remain) var(--progress), var(--range-remain) 100%);
        
        transform: translateY(50%);
    
        transition: height 30ms ease-in-out;
    }
    .slider::-webkit-slider-thumb { //use background
        pointer-events: auto;

        appearance: none;
    
        width: var(--point-min);
        height: var(--point-min);
    
        border-radius: 100%;
        background-color: var(--col-purple-dark);
        @include effects.drop-out; 
    
        transition: width 30ms linear, height 30ms linear;
    }
    .point-counter {
        position: absolute;

        // bottom: 1rem;
        bottom: 0;
        // left: clamp(var(--comp-width) / 2 + 0.5rem, var(--range-progress), 100% - var(--comp-width) / 2 - 0.5rem);
        
        transform: translateX(-50%);

        opacity: 0;
    
        transition: opacity 80ms linear, bottom 120ms ease;
    }
    .zone {
        // pointer-events: auto;
        pointer-events: none;

        position: absolute;
    
        bottom: 0;
        left: 50%;

        // width: calc(100% + var(--progress-zone-size));
        width: 100%;
        height: var(--progress-zone-size);
        
        transform: translate(-50%, 50%);
    }
    .background {
        pointer-events: none;
    
        position: absolute;
    
        bottom: 0;
    
        width: 100%;
        height: var(--progress-area-height);
    
        background-image: linear-gradient(to top, var(--area), transparent);
    
        opacity: 0;
    
        z-index: auto;
    
        transition: var(--area-anim);
    }
    &.-near {
        .background {
            opacity: 1;
        }

        @include mixins.hover-cursor {
            .slider {
                height: var(--progress-near);

                transition: width 40ms ease-in-out;
            }

            .slider::-webkit-slider-thumb {
                width: var(--point-near);
                height: var(--point-near);

                transition: width 30ms ease-in-out, height 30ms ease-in-out;
            }
        }
    }
    @mixin -hover {
        .slider {
            height: var(--progress-max);
        }

        .slider::-webkit-slider-thumb {
            width: var(--point-most);
            height: var(--point-most);

            transition: width 40ms linear, height 40ms linear;
        }
    }
    &.-hover {
        @include -hover;
    }
    &.-active {
        .slider {
            height: var(--progress-max);

            filter: drop-shadow(0px 0px 0.4rem hsl(var(--colm-gold), 80%));
        }
        .slider::-webkit-slider-thumb {
            width: var(--point-max);
            height: var(--point-max);
        }
    }
    &:is(.-near, .-hover, .-active)/*:not(.-touch)*/ {
        .point-counter {
            bottom: 1rem;

            opacity: 1;

            // animation-delay: 2s;
            transition: opacity 80ms linear, bottom 120ms ease;
        }
    }

    @include mixins.hover-mobile {
        @include -hover;

        .point-counter {
            transition: opacity 80ms linear 1.5s, bottom 120ms ease 1.5s;
        }
    }
}